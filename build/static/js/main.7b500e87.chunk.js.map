{"version":3,"sources":["store/reducers/errorReducer.jsx","store/actions/types.jsx","store/reducers/authReducer.jsx","store/reducers/socketReducer.jsx","store/reducers/index.jsx","store.js","components/PrivateRoute.jsx","store/actions/socketActions.jsx","lang/fr.js","lang/en.js","hooks/RegisterForm.jsx","store/actions/authActions.jsx","hooks/LoginForm.jsx","components/Dashboard/GroupForm.jsx","components/Dashboard/CardDashboard.jsx","hooks/DashBoard.jsx","components/NavBar.jsx","components/Task/TaskForm.jsx","components/Task/Task.jsx","components/Task/UserForm.jsx","hooks/TaskList.jsx","components/Menu.jsx","components/Profil.jsx","components/Header.jsx","routes.jsx","index.jsx"],"names":["initialState","msg","status","id","state","action","type","payload","token","isAuthentificated","isLoading","user","socket","taskList","groupList","isLoaded","id_task","team","task","createRootReducer","history","combineReducers","router","connectRouter","error","errorReducer","auth","authReducer","socketReducer","createBrowserHistory","middleware","thunk","PrivateRoute","Component","funct","render","props","to","pathname","propsTypes","PropTypes","node","isRequired","bool","defaultTypes","initSocket","dispatch","io","loadingtoggle","login","connect","password","button","register","first","last","dashboard","hello","subheader","groupInfo","groupForm","title","name","submit","taskForm","content","page","emptyList","userForm","welcome","menu_button","disconnect","counterpart","registerTranslations","fr","en","useStyles","makeStyles","theme","h1","width","marginBottom","container","display","alignItems","flexDirection","card","float","formControl","margin","spacing","RegisterForm","React","useState","firstName","lastName","email","profile","setProfile","cardTitle","classes","useEffect","push","handleChange","event","target","value","className","component","Card","CardHeader","FormControl","InputLabel","htmlFor","Input","onChange","Button","variant","onClick","defaultProps","body","JSON","stringify","axios","post","headers","then","res","data","catch","LoginForm","handleSubmit","a","getModalStyle","top","left","transform","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","GroupForm","modal","changeModalState","modalStyle","groupname","changeGroup","closem","loadgroup","users","createGroup","Modal","open","onClose","style","e","required","group","length","emit","config","authorization","get","console","log","teams","root","marginTop","height","minHeight","header","list","marginLeft","marginRight","overflow","maxHeight","listSection","ul","CardDashboard","activeGroup","changeActive","init","changeInit","initGroup","listclick","lname","initTask","initId","CardContent","Typography","List","ListSubheader","map","ListItem","key","ListItemText","primary","Object","keys","includes","tab","find","elm","toString","DashBoard","flexGrow","menuButton","link","NavBar","setLocale","localStorage","getItem","AppBar","Toolbar","setItem","Link","href","color","TaskForm","tcardName","changeName","tcontent","changeContent","toggle","cardName","createTask","addTaskTeam","on","maxWidth","media","paddingTop","expand","transition","transitions","create","duration","shortest","expandOpen","avatar","red","Task","taskcontent","tasktitle","Avatar","aria-label","CardActions","disableSpacing","IconButton","newuser","changeNewUser","addUserTeam","parseInt","teamID","teamId","userId","TaskList","tlist","UserForm","options","screen","ITEM_HEIGHT","LongMenu","anchorEl","setAnchorEl","Boolean","handleClose","changeScreen","option","indexOf","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","PaperProps","MenuItem","store","logout","breakpoints","up","search","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","Header","noWrap","Profil","Routes","path","Dashboard","exact","preloadedState","createStore","compose","applyMiddleware","routerMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7b500e87.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOAD_GROUP = 'LOAD_GROUP';\r\nexport const CREATE_GROUP = 'CREATE_GROUP';\r\nexport const CREATE_GROUP_FAIL = 'CREATE_GROUP_FAIL';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const SOCKET_SUCCESS = 'SOCKET_SUCCESS';\r\nexport const RECEIVE_TASK = 'RECEIVE_TASK';\r\nexport const ADD_USER_TEAM = 'ADD_USER_TEAM';\r\nexport const ADD_USER_TASK = 'ADD_USER_TASK';\r\nexport const INIT_SOCKET = 'INIT_SOCKET';\r\nexport const INIT_GROUPS = 'INIT_GROUPS';\r\nexport const NO_GROUPS = 'NO_GROUPS';\r\nexport const INIT_TASK = 'INIT_TASK';\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const INIT_TASK_FAIL = 'INIT_TASK_FAIL';\r\nexport const LOAD_ERROR = 'LOAD_ERROR';\r\nexport const CHANGE_LOAD = 'CHANGE_LOAD';\r\nexport const INIT_ID = 'INIT_ID';\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  isAuthentificated: null,\r\n  isLoading: false,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthentificated: true,\r\n        isLoading: false,\r\n      };\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthentificated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_TASK, UPDATE_TASK, DELETE_TASK, INIT_SOCKET, INIT_GROUPS, NO_GROUPS, CREATE_GROUP,\r\n  INIT_TASK, CREATE_TASK, INIT_TASK_FAIL, LOAD_GROUP, CHANGE_LOAD, LOGOUT_SUCCESS, INIT_ID,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  socket: null,\r\n  taskList: {},\r\n  groupList: [],\r\n  isLoaded: false,\r\n  id_task: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case INIT_SOCKET:\r\n      return {\r\n        ...state,\r\n        socket: action.payload,\r\n      };\r\n    case LOAD_GROUP:\r\n    case INIT_GROUPS:\r\n      return {\r\n        ...state,\r\n        groupList: action.payload,\r\n        isLoaded: true,\r\n      };\r\n    case INIT_TASK:\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n        taskList: action.payload,\r\n      };\r\n    case INIT_ID:\r\n      return {\r\n        ...state,\r\n        id_task: action.payload,\r\n      };\r\n    case INIT_TASK_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n      };\r\n    case CHANGE_LOAD:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n      };\r\n    case CREATE_GROUP:\r\n      return {\r\n        ...state,\r\n        groupList: [\r\n          ...state.groupList,\r\n          action.payload,\r\n        ],\r\n      };\r\n    case CREATE_TASK:\r\n      return {\r\n        ...state,\r\n        taskList: {\r\n          ...state.taskList,\r\n          team: {\r\n            ...state.taskList.team,\r\n            task: [\r\n              ...state.taskList.team.task,\r\n              action.payload,\r\n            ],\r\n          },\r\n        },\r\n      };\r\n    case ADD_TASK:\r\n    case UPDATE_TASK:\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        taskList: {\r\n          ...state.taskList,\r\n          task: [\r\n            ...state.taskList.task,\r\n            action.payload,\r\n          ],\r\n        },\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        socket: null,\r\n        taskList: [],\r\n        groupList: [],\r\n        isLoaded: false,\r\n      };\r\n    case NO_GROUPS:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport socketReducer from './socketReducer';\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  error: errorReducer,\r\n  auth: authReducer,\r\n  socket: socketReducer,\r\n});\r\n\r\nexport default createRootReducer;\r\n","import { createBrowserHistory } from 'history';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from './store/reducers';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst middleware = [thunk];\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n        ...middleware,\r\n      ),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    ),\r\n  );\r\n  return store;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Route, Redirect,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ funct: Component, auth }) => (\r\n  <Route\r\n    render={(props) => (auth ? (\r\n      <Component {...props} />\r\n    ) : (<Redirect to={{ pathname: '/login' }} />)\r\n    )}\r\n  />\r\n);\r\n\r\nPrivateRoute.propsTypes = {\r\n  funct: PropTypes.node.isRequired,\r\n  auth: PropTypes.bool.isRequired,\r\n};\r\n\r\nPrivateRoute.defaultTypes = {\r\n  auth: false,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_TASK,\r\n  ADD_USER_TEAM,\r\n  ADD_USER_TASK,\r\n  CREATE_GROUP,\r\n  CREATE_GROUP_FAIL,\r\n  INIT_SOCKET,\r\n  RECEIVE_TASK,\r\n  INIT_GROUPS,\r\n  INIT_TASK,\r\n  NO_GROUPS,\r\n  CREATE_TASK,\r\n  INIT_TASK_FAIL,\r\n  LOAD_GROUP,\r\n  LOAD_ERROR,\r\n  CHANGE_LOAD,\r\n  LOGOUT_SUCCESS,\r\n  INIT_ID,\r\n} from './types';\r\n\r\nexport const initSocket = () => (dispatch) => {\r\n  const socket = io(':4000');\r\n  dispatch({\r\n    type: INIT_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n\r\nexport const loadingtoggle = () => (dispatch) => {\r\n  dispatch({\r\n    type: CHANGE_LOAD,\r\n  });\r\n};\r\n\r\nexport const initGroup = (user) => (dispatch) => {\r\n  if (Object.keys(user).includes('teams')) {\r\n    dispatch({\r\n      type: INIT_GROUPS,\r\n      payload: user.teams,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: NO_GROUPS,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadgroup = (token) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      authorization: `bearer ${token}`,\r\n    },\r\n  };\r\n  axios.get('http://localhost:4000/user/me', config)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: LOAD_GROUP,\r\n        payload: res.data.teams,\r\n      });\r\n    })\r\n    .catch((/* err */) => {\r\n      // dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: LOAD_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const initId = (groupList, name) => (dispatch) => {\r\n  dispatch({\r\n    type: INIT_ID,\r\n    payload: groupList.find((elm) => elm.name === name).id,\r\n  });\r\n};\r\nexport const initTask = (name, groupList, socket) => (dispatch) => {\r\n  const tab = groupList.find((elm) => elm.name === name);\r\n  console.log('id: ', tab.id.toString());\r\n\r\n  const config = {\r\n    headers: {\r\n      authorization: (tab.id).toString(),\r\n    },\r\n  };\r\n\r\n  axios('http://localhost:4000/user/team', config)\r\n    .then((res) => {\r\n      socket.emit('joinRoom', (tab.id).toString());\r\n      dispatch({\r\n        type: INIT_TASK,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch(() => {\r\n      // dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: INIT_TASK_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const createGroup = (group, socket) => (dispatch) => {\r\n  if (group.name.length > 3) {\r\n    socket.emit('createTeam', group);\r\n    dispatch({\r\n      type: CREATE_GROUP,\r\n      payload: group,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: CREATE_GROUP_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const retrieveTask = (group, socket) => (dispatch) => {\r\n  socket.on(group, (task) => {\r\n    dispatch({\r\n      payload: task,\r\n      type: RECEIVE_TASK,\r\n    });\r\n  });\r\n};\r\n\r\nexport const addUserTeam = (teamID, user, socket) => (dispatch) => {\r\n  const body = { teamId: teamID, userId: user };\r\n  socket.emit('addUserToTeam', body);\r\n  dispatch({\r\n    type: ADD_USER_TEAM,\r\n  });\r\n};\r\n\r\nexport const createTask = (task, socket) => (dispatch) => {\r\n  socket.emit('createTask', task);\r\n  dispatch({\r\n    type: CREATE_TASK,\r\n    payload: task,\r\n  });\r\n};\r\n\r\nexport const addTaskTeam = (task, socket) => (dispatch) => {\r\n  socket.on(task.team.id, () => {\r\n    socket.emit('addTaskToTeam', task);\r\n  });\r\n  dispatch({\r\n    type: ADD_TASK,\r\n    payload: task,\r\n  });\r\n};\r\n\r\nexport const addUserTask = (team, socket) => (dispatch) => {\r\n  socket.emit('addUserToTask', team);\r\n  dispatch({\r\n    type: ADD_USER_TASK,\r\n  });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT_SUCCESS,\r\n  });\r\n};\r\n","export default {\r\n  login: {\r\n    login: 'Se connecter',\r\n    connect: 'Vous pouvez vous connecter ici',\r\n    password: 'Mot de passe',\r\n    button: 'Connexion',\r\n  },\r\n  register: {\r\n    register: 'S\\'inscrire',\r\n    connect: 'Vous pouvez vous inscrire ici',\r\n    first: 'Prénom',\r\n    last: 'Nom',\r\n    button: 'Inscription',\r\n    password: 'Mot de passe',\r\n  },\r\n  dashboard: {\r\n    hello: 'Bonjour',\r\n    subheader: 'Vous trouverez ici les groupes auquels vous appartenez',\r\n    id: 'Voici votre ID: ',\r\n    groupList: 'Liste de vos groupes',\r\n    groupInfo: 'Vous ne faites parti de aucun groupe',\r\n  },\r\n  groupForm: {\r\n    button: 'Créer un groupe',\r\n    title: 'Création d\\' groupe',\r\n    name: 'Nom du groupe',\r\n    submit: 'Créer',\r\n  },\r\n  taskForm: {\r\n    button: 'Ajouter une tâche',\r\n    title: 'Ajout d\\'une tâche',\r\n    content: 'Description',\r\n    name: 'Nom de la tâche',\r\n    submit: 'Ajouter',\r\n    page: 'Ajouter un utilisateur',\r\n  },\r\n  taskList: {\r\n    title: 'Liste des tâches',\r\n    emptyList: 'Votre liste de tâche est vide pour le moment',\r\n  },\r\n  userForm: {\r\n    button: 'Ajouter un utilisateur',\r\n    title: 'Ajout un utilisateur',\r\n    id: 'Id de l\\'utilisateur',\r\n    submit: 'Ajouter',\r\n  },\r\n  welcome: 'Bienvenue sur Organiz',\r\n  menu_button: {\r\n    dashboard: 'Accueil',\r\n  },\r\n  disconnect: 'Déconnexion',\r\n};\r\n","export default {\r\n  login: {\r\n    login: 'Sign in',\r\n    connect: 'You can sign in here',\r\n    password: 'Password',\r\n    button: 'Sign in',\r\n  },\r\n  register: {\r\n    register: 'Sign up',\r\n    connect: 'You can sign up here',\r\n    first: 'First Name',\r\n    last: 'Last Name',\r\n    password: 'Password',\r\n    button: 'Sign up',\r\n  },\r\n  dashboard: {\r\n    hello: 'Hello',\r\n    subheader: 'You can find here your group list',\r\n    id: 'Here is your ID: ',\r\n    groupList: 'Your group list',\r\n    groupInfo: 'You are part of any group',\r\n  },\r\n  groupForm: {\r\n    button: 'Create a group',\r\n    title: 'Group creation',\r\n    name: 'Group name',\r\n    submit: 'Create',\r\n  },\r\n  taskForm: {\r\n    button: 'Add a task',\r\n    title: 'Add a task',\r\n    content: 'Description',\r\n    name: 'Task name',\r\n    submit: 'Add',\r\n    page: 'Add a user',\r\n  },\r\n  taskList: {\r\n    title: 'Task list',\r\n    emptyList: 'Your task list is empty for now',\r\n  },\r\n  userForm: {\r\n    button: 'Add a user',\r\n    title: 'Add a user',\r\n    id: 'User\\'s ID',\r\n    submit: 'Add',\r\n  },\r\n  welcome: 'Welcome to Organiz',\r\n  menu_button: {\r\n    dashboard: 'Dashboard',\r\n  },\r\n  disconnect: 'Log out',\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport { push } from 'connected-react-router';\r\nimport { register } from '../store/actions/authActions';\r\nimport { initSocket } from '../store/actions/socketActions';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  h1: {\r\n    width: '100%',\r\n    marginBottom: 50,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  card: {\r\n    width: '50%',\r\n    float: 'center',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction RegisterForm(props) {\r\n  const [profile, setProfile] = React.useState({\r\n    firstName: '', lastName: '', email: '', password: '',\r\n  });\r\n  const cardTitle = <Translate content=\"login.connect\" />;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props.isAuthentificated) {\r\n      props.push(`/${props.user.firstName}/${props.user.lastName}/dashboard`);\r\n    }\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      name, value,\r\n    } = event.target;\r\n    setProfile({\r\n      ...profile, [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.register(profile);\r\n    props.initSocket();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Translate className={classes.h1} component=\"h1\" content=\"welcome\" />\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          title={cardTitle}\r\n        />\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"component-simple\">\r\n            <Translate content=\"register.first\" />\r\n          </InputLabel>\r\n          <Input name=\"firstName\" id=\"firstName\" value={profile.firstName} onChange={handleChange} />\r\n        </FormControl>\r\n        <br />\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"component-simple\">\r\n            <Translate content=\"register.last\" />\r\n          </InputLabel>\r\n          <Input name=\"lastName\" id=\"lastName\" value={profile.lastName} onChange={handleChange} />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"component-simple\">Mail</InputLabel>\r\n          <Input name=\"email\" id=\"email\" value={profile.email} onChange={handleChange} />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"component-simple\">\r\n            <Translate content=\"register.password\" />\r\n          </InputLabel>\r\n          <Input name=\"password\" id=\"password\" value={profile.password} onChange={handleChange} />\r\n        </FormControl>\r\n        <Button variant=\"contained\" onClick={handleSubmit}>\r\n          <Translate content=\"register.button\" />\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n  isAuthentificated: PropTypes.bool,\r\n  initSocket: PropTypes.func.isRequired,\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n  register: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n};\r\n\r\nRegisterForm.defaultProps = {\r\n  isAuthentificated: false,\r\n  user: null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthentificated: state.auth.isAuthentificated,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, push, initSocket })(RegisterForm);\r\n","import axios from 'axios';\r\n// import { returnErrors } from './errorActions';\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from './types';\r\n\r\n// Register User\r\nexport const register = ({\r\n  firstName, lastName, email, password,\r\n}) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify({\r\n    firstName, lastName, email, password,\r\n  });\r\n  axios.post('http://localhost:4000/auth/register', body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((/* err */) => {\r\n      // dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify({ email, password });\r\n  axios.post('http://localhost:4000/auth/local', body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((/* err */) => {\r\n      // dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT_SUCCESS,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport PropTypes from 'prop-types';\r\nimport { push } from 'connected-react-router';\r\nimport { login } from '../store/actions/authActions';\r\nimport { initSocket, loadingtoggle } from '../store/actions/socketActions';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthentificated: state.auth.isAuthentificated,\r\n  user: state.auth.user,\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  h1: {\r\n    width: '100%',\r\n    marginBottom: 50,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  card: {\r\n    width: '50%',\r\n    float: 'center',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction LoginForm(props) {\r\n  const [profile, setProfile] = React.useState({ email: '', password: '' });\r\n  const cardTitle = <Translate content=\"login.connect\" />;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props.isAuthentificated && props.user != null) {\r\n      props.push(`/${props.user.firstName}/${props.user.lastName}/dashboard`);\r\n      props.loadingtoggle();\r\n    }\r\n  }, [props]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setProfile({ ...profile, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    await props.login(profile);\r\n    props.initSocket();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Translate className={classes.h1} component=\"h1\" content=\"welcome\" />\r\n      <Card className={classes.card}>\r\n        <CardHeader title={cardTitle} />\r\n        <div>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"component-simple\">Mail</InputLabel>\r\n            <Input\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={profile.email}\r\n              onChange={handleChange}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"component-simple\">\r\n              <Translate content=\"login.password\" />\r\n            </InputLabel>\r\n            <Input\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={profile.password}\r\n              onChange={handleChange}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n            <Translate content=\"login.button\" />\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  isAuthentificated: PropTypes.bool,\r\n  initSocket: PropTypes.func.isRequired,\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n  login: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n  loadingtoggle: PropTypes.func.isRequired,\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  isAuthentificated: null,\r\n  user: null,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    login, push, initSocket, loadingtoggle,\r\n  },\r\n)(LoginForm);\r\n","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport { createGroup, loadgroup } from '../../store/actions/socketActions';\r\nimport fr from '../../lang/fr';\r\nimport en from '../../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  user: state.auth.user,\r\n  token: state.auth.token,\r\n});\r\n\r\nfunction GroupForm(props) {\r\n  const [modal, changeModalState] = useState(false);\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const {\r\n    socket, user, token,\r\n  } = props;\r\n  const [groupname, changeGroup] = useState('');\r\n\r\n  const closem = async () => {\r\n    await props.loadgroup(token);\r\n    changeModalState(false);\r\n  };\r\n\r\n  const openm = () => changeModalState(true);\r\n\r\n  const handleSubmit = async () => {\r\n    const body = { name: groupname, users: [{ id: user.id }] };\r\n    await props.createGroup(body, socket);\r\n    closem();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={openm}>\r\n        <Translate content=\"groupForm.button\" />\r\n      </Button>\r\n      <Modal open={modal} onClose={() => changeModalState(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">\r\n            <Translate content=\"groupForm.title\" />\r\n          </h2>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"component-simple\">\r\n              <Translate content=\"groupForm.name\" />\r\n            </InputLabel>\r\n            <Input className=\"form-control\" id=\"name\" onChange={(e) => changeGroup(e.target.value)} type=\"text\" name=\"name\" required />\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={handleSubmit}>\r\n            <Translate content=\"groupForm.submit\" />\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nGroupForm.propTypes = {\r\n  createGroup: PropTypes.func.isRequired,\r\n  loadgroup: PropTypes.func.isRequired,\r\n  socket: PropTypes.oneOfType([PropTypes.object]),\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n  token: PropTypes.string,\r\n};\r\n\r\nGroupForm.defaultProps = {\r\n  socket: null,\r\n  user: null,\r\n  token: '',\r\n};\r\n\r\nexport default connect(mapStateToProps, { createGroup, loadgroup })(GroupForm);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport { push } from 'connected-react-router';\r\nimport { initGroup, initTask, loadingtoggle, initId } from '../../store/actions/socketActions';\r\nimport fr from '../../lang/fr';\r\nimport en from '../../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: 5,\r\n    marginBottom: 2,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  card: {\r\n    width: '80%',\r\n    height: '100%',\r\n    minHeight: 800,\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    backgroundColor: 'purple',\r\n  },\r\n  list: {\r\n    width: 500,\r\n    backgroundColor: 'green',\r\n    display: 'block',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    overflow: 'auto',\r\n    maxHeight: 200,\r\n    marginBottom: 5,\r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n    position: 'center',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'green',\r\n    padding: 0,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  socket: state.socket.socket,\r\n  groupList: state.socket.groupList,\r\n  token: state.auth.token,\r\n  isLoaded: state.socket.isLoaded,\r\n});\r\n\r\nfunction CardDashboard(props) {\r\n  const classes = useStyles();\r\n  const subheader = <Translate content=\"dashboard.subheader\" />;\r\n  const [activeGroup, changeActive] = useState('');\r\n  const {\r\n    user, groupList, socket, isLoaded,\r\n  } = props;\r\n  const [init, changeInit] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (init === 0) {\r\n      props.loadingtoggle();\r\n      if (groupList.length === 0) {\r\n        props.initGroup(user);\r\n        props.loadingtoggle();\r\n      }\r\n      changeInit(1);\r\n    }\r\n  }, [props, groupList, user, init]);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded && activeGroup.length > 0) {\r\n      props.push(`/group/${activeGroup}`);\r\n      props.loadingtoggle();\r\n    }\r\n  }, [props, isLoaded, activeGroup]);\r\n\r\n  const listclick = async (lname) => {\r\n    changeActive(lname);\r\n    await props.initTask(lname, groupList, socket);\r\n    props.initId(groupList, lname);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        title={`${user.firstName} ${user.lastName}`}\r\n        subheader={subheader}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <Translate content=\"dashboard.id\" />\r\n          {user.id}\r\n        </Typography>\r\n        <List className={classes.list} subheader={<li />}>\r\n          <ul className={classes.ul}>\r\n            <ListSubheader className={classes.header}>\r\n              <Translate content=\"dashboard.groupList\" />\r\n            </ListSubheader>\r\n            {\r\n              (groupList.length === 0) ? (\r\n                <Typography>\r\n                  <Translate content=\"dashboard.groupInfo\" />\r\n                </Typography>\r\n              ) : (\r\n                  groupList.map(({ name, id }) => (\r\n                    <ListItem button key={id} onClick={() => listclick(name)}>\r\n                      <ListItemText primary={name} key={name} />\r\n                    </ListItem>\r\n                  ))\r\n                )\r\n            }\r\n          </ul>\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCardDashboard.propTypes = {\r\n  loadingtoggle: PropTypes.func.isRequired,\r\n  initGroup: PropTypes.func.isRequired,\r\n  initTask: PropTypes.func.isRequired,\r\n  groupList: PropTypes.oneOfType([PropTypes.array]),\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n  push: PropTypes.func.isRequired,\r\n  socket: PropTypes.oneOfType([PropTypes.object]),\r\n  isLoaded: PropTypes.bool,\r\n  initId: PropTypes.func.isRequired,\r\n};\r\n\r\nCardDashboard.defaultProps = {\r\n  groupList: [],\r\n  user: null,\r\n  socket: null,\r\n  isLoaded: false,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  initGroup, push, initTask, loadingtoggle, initId,\r\n})(CardDashboard);\r\n","import React from 'react';\r\nimport GroupForm from '../components/Dashboard/GroupForm';\r\nimport CardDashboard from '../components/Dashboard/CardDashboard';\r\n\r\nfunction DashBoard() {\r\n  return (\r\n    <div>\r\n      <GroupForm />\r\n      <CardDashboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashBoard;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport { Link } from '@material-ui/core';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction NavBar() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    counterpart.setLocale(localStorage.getItem('lang') || 'fr');\r\n  });\r\n\r\n  const setLangFr = () => {\r\n    localStorage.setItem('lang', 'fr');\r\n    counterpart.setLocale(localStorage.getItem('lang'));\r\n  };\r\n\r\n  const setLangEn = () => {\r\n    localStorage.setItem('lang', 'en');\r\n    counterpart.setLocale(localStorage.getItem('lang'));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Organiz\r\n          </Typography>\r\n          <button type=\"button\" onClick={setLangFr}>\r\n            FR\r\n          </button>\r\n          <button type=\"button\" onClick={setLangEn}>\r\n            EN\r\n          </button>\r\n          <Link href=\"/login\" color=\"inherit\" className={classes.link}>\r\n            <Translate content=\"login.login\" />\r\n          </Link>\r\n          <Link href=\"/register\" color=\"inherit\" className={classes.link}>\r\n            <Translate content=\"register.register\" />\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { connect } from 'react-redux';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport { addTaskTeam, createTask } from '../../store/actions/socketActions';\r\nimport fr from '../../lang/fr';\r\nimport en from '../../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  taskList: state.socket.taskList,\r\n  user: state.auth.user,\r\n  socket: state.socket.socket,\r\n});\r\n\r\nfunction TaskForm(props) {\r\n  const { user, taskList, socket } = props;\r\n  const [modal, changeModalState] = useState(false);\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [tcardName, changeName] = useState('');\r\n  const [tcontent, changeContent] = useState('');\r\n\r\n  const toggle = () => {\r\n    changeModalState(!modal);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const body = {\r\n      content: tcontent, cardName: tcardName, team: taskList.team, users: [{ id: user.id }],\r\n    };\r\n    console.log('body: ', body);\r\n    props.createTask(body, socket);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggle}>\r\n        <Translate content=\"taskForm.button\" />\r\n      </Button>\r\n      <Modal open={modal} onClose={() => changeModalState(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">\r\n            <Translate content=\"taskForm.title\" />\r\n          </h2>\r\n          <div>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"component-simple\">\r\n                <Translate content=\"taskForm.name\" />\r\n              </InputLabel>\r\n              <Input className=\"form-control\" name=\"cardName\" id=\"cardName\" onChange={(e) => changeName(e.target.value)} type=\"text\" required />\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"component-simple\">\r\n                <Translate content=\"taskForm.content\" />\r\n              </InputLabel>\r\n              <Input className=\"form-control\" name=\"content\" id=\"content\" onChange={(e) => changeContent(e.target.value)} type=\"text\" />\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <Button variant=\"contained\" onClick={handleSubmit}>\r\n              <Translate content=\"taskForm.submit\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskForm.propTypes = {\r\n  createTask: PropTypes.func.isRequired,\r\n  taskList: PropTypes.oneOfType([PropTypes.object]),\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n  socket: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nTaskForm.defaultProps = {\r\n  taskList: null,\r\n  user: null,\r\n  socket: null,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addTaskTeam, createTask })(TaskForm);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { red } from '@material-ui/core/colors';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BuildSharpIcon from '@material-ui/icons/BuildSharp';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nfunction Task(props) {\r\n  const { taskcontent, tasktitle } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={(\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            TS\r\n          </Avatar>\r\n        )}\r\n        title={tasktitle}\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {taskcontent}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"update\">\r\n          <BuildSharpIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTask.propTypes = {\r\n  taskcontent: PropTypes.string,\r\n  tasktitle: PropTypes.string,\r\n};\r\n\r\nTask.defaultProps = {\r\n  taskcontent: '',\r\n  tasktitle: '',\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { connect } from 'react-redux';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport { addUserTeam } from '../../store/actions/socketActions';\r\nimport fr from '../../lang/fr';\r\nimport en from '../../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  socket: state.socket.socket,\r\n  taskList: state.socket.taskList,\r\n});\r\n\r\nfunction GroupForm(props) {\r\n  const [modal, changeModalState] = useState(false);\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const { socket, taskList } = props;\r\n  const [newuser, changeNewUser] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    changeNewUser(event.target);\r\n  };\r\n\r\n  const toggle = () => {\r\n    changeModalState(!modal);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.addUserTeam(taskList.team.id, parseInt(newuser, 10), socket);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggle}>\r\n        <Translate content=\"userForm.button\" />\r\n      </Button>\r\n      <Modal open={modal} onClose={() => changeModalState(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">\r\n            <Translate content=\"userForm.title\" />\r\n          </h2>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"component-simple\">\r\n              <Translate content=\"userForm.id\" />\r\n            </InputLabel>\r\n            <Input className=\"form-control\" id=\"id\" onChange={handleChange} type=\"text\" name=\"id\" required />\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={handleSubmit}>\r\n            <Translate content=\"userForm.submit\" />\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nGroupForm.propTypes = {\r\n  addUserTeam: PropTypes.func.isRequired,\r\n  socket: PropTypes.oneOfType([PropTypes.object]),\r\n  taskList: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nGroupForm.defaultProps = {\r\n  socket: null,\r\n  taskList: null,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addUserTeam })(GroupForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types/prop-types';\r\nimport { Typography } from '@material-ui/core';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport TaskFrom from '../components/Task/TaskForm';\r\nimport Task from '../components/Task/Task';\r\nimport UserForm from '../components/Task/UserForm';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\nconst mapStateToProps = (state) => ({\r\n  tlist: state.socket.taskList,\r\n});\r\n\r\nfunction TaskList(props) {\r\n  const { tlist } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Translate content=\"taskList.title\" component=\"h1\" />\r\n      </div>\r\n      <div>\r\n        <TaskFrom />\r\n      </div>\r\n      <div>\r\n        <UserForm />\r\n      </div>\r\n      <div>\r\n        {console.log('list: ', tlist)}\r\n        {\r\n          (tlist.team.task.length > 0) ? (\r\n            tlist.team.task.map((task) => (\r\n              <Task key={task.cardName} taskcontent={task.content} tasktitle={task.cardName} />\r\n            ))\r\n          ) : (\r\n              <Typography>\r\n                <Translate content=\"taskList.emptyList\" />\r\n              </Typography>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  tlist: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nTaskList.defaultProps = {\r\n  tlist: null,\r\n};\r\n\r\nexport default connect(mapStateToProps)(TaskList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport { push } from 'connected-react-router';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst options = [\r\n  <Translate content=\"menu_button.dashboard\" />,\r\n];\r\n\r\nconst screen = [\r\n  '/',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nfunction LongMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.push(`/${props.user.firstName}/${props.user.lastName}/dashboard`)\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const changeScreen = (option) => (screen[options.indexOf(option)]);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"menu\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <Link key={option} to={changeScreen(option)}>\r\n            <MenuItem key={option} onClick={handleClose}>\r\n              {option}\r\n            </MenuItem>\r\n          </Link>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nLongMenu.propTypes = {\r\n  push: PropTypes.func.isRequired,\r\n  user: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nLongMenu.defaultProps = {\r\n  user: null,\r\n};\r\n\r\nconst mapStateToProps = (store) => ({\r\n  user: store.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { push })(LongMenu);\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport { push } from 'connected-react-router';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\nimport { logout } from '../store/actions/authActions';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst options = [\r\n  <Translate content=\"disconnect\" />,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nfunction LongMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.logout();\r\n    props.push('/login');\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={option} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nLongMenu.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  push: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { logout, push })(LongMenu);\r\n","import React, { useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport counterpart from 'counterpart';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuButton from './Menu';\r\nimport ProfilButton from './Profil';\r\nimport fr from '../lang/fr';\r\nimport en from '../lang/en';\r\n\r\ncounterpart.registerTranslations('fr', fr);\r\ncounterpart.registerTranslations('en', en);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    counterpart.setLocale(localStorage.getItem('lang') || 'fr');\r\n  });\r\n\r\n  const setLangFr = () => {\r\n    localStorage.setItem('lang', 'fr');\r\n    counterpart.setLocale(localStorage.getItem('lang'));\r\n  };\r\n\r\n  const setLangEn = () => {\r\n    localStorage.setItem('lang', 'en');\r\n    counterpart.setLocale(localStorage.getItem('lang'));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <MenuButton />\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            Organiz\r\n          </Typography>\r\n          <button type=\"button\" onClick={setLangFr}>\r\n            FR\r\n          </button>\r\n          <button type=\"button\" onClick={setLangEn}>\r\n            EN\r\n          </button>\r\n          <ProfilButton />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {\r\n  Route, Switch,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport RegisterForm from './hooks/RegisterForm';\r\nimport LoginForm from './hooks/LoginForm';\r\nimport Dashboard from './hooks/DashBoard';\r\nimport NavBar from './components/NavBar';\r\nimport { history } from './store';\r\nimport TaskList from './hooks/TaskList';\r\nimport Header from './components/Header';\r\n\r\nconst Routes = ({ isAuthentificated }) => (\r\n  <div>\r\n    <ConnectedRouter history={history}>\r\n      {\r\n        (isAuthentificated) ? (\r\n          // mettre ton header\r\n          <Header />\r\n        ) : (\r\n            <NavBar />\r\n          )\r\n      }\r\n      <br />\r\n      <div>\r\n        <Switch>\r\n          <PrivateRoute\r\n            path=\"/group/:name\"\r\n            auth={isAuthentificated}\r\n            funct={TaskList}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/:firstname/:lastname/dashboard\"\r\n            auth={isAuthentificated}\r\n            funct={Dashboard}\r\n          />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/register\" component={RegisterForm} />\r\n          <Route exact path=\"/\" component={LoginForm} />\r\n        </Switch>\r\n      </div>\r\n    </ConnectedRouter>\r\n  </div>\r\n);\r\n\r\nRoutes.propTypes = {\r\n  isAuthentificated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthentificated: state.auth.isAuthentificated,\r\n});\r\n\r\nRoutes.defaultProps = {\r\n  isAuthentificated: null,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store';\r\nimport Routes from './routes';\r\n\r\nconst store = configureStore();\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Routes />\r\n    </div>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}